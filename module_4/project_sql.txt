Слайд "Методика Расчета себестоимости рейса"

1. Список аэропортов, куда есть рейсы из Анапы:

WITH airports_inbound_flights AS
  (SELECT DISTINCT f.departure_airport airport_code
   FROM dst_project.flights f
   JOIN dst_project.airports a ON f.arrival_airport=a.airport_code
   WHERE a.city='Anapa' ),
     airports_oubound_flights AS
  (SELECT DISTINCT f.arrival_airport airport_code
   FROM dst_project.flights f
   JOIN dst_project.airports a ON f.departure_airport=a.airport_code
   WHERE a.city='Anapa' )
SELECT DISTINCT a1.airport_code,
                a2.airport_name,
                a2.city
FROM
  (SELECT airport_code
   FROM airports_inbound_flights
   UNION ALL SELECT airport_code
   FROM airports_oubound_flights) a1
JOIN dst_project.airports a2 ON a1.airport_code=a2.airport_code


2. Модели самолетов, которые летают их/в Анапу:

SELECT DISTINCT f.aircraft_code,
                a.model,
                a.range
FROM dst_project.flights f
JOIN dst_project.aircrafts a ON a.aircraft_code=f.aircraft_code
WHERE (f.arrival_airport='AAQ'
       OR f.departure_airport='AAQ')
  AND status in ('Departed',
                 'Arrived')


3. Расстояние между аэропортами:

Для расчета длины между двумя точками использовалась формула по данной ссылке: https://stackoverflow.com/questions/61135374/postgresql-calculate-distance-between-two-points-without-using-postgis/65739481#65739481

Посколько прав на создание функций не было, то пришлось заинлайнить функцию как:
acos(sin(pi() * lat1 / 180) * sin(pi() * lat2 / 180) + cos(pi() * lat1 / 180) * cos(pi() * lat2 / 180) * cos(pi() * (lon1 - lon2) / 180)) * 180 / pi() * 60 * 1.1515 * 1.609344

Получаем SQL:

SELECT a1.airport_code,
       a1.latitude latitude1,
       a1.longitude longitude1,
       a2.latitude latitude2,
       a2.longitude longitude2,
       acos(sin(pi() * a1.latitude / 180) * sin(pi() * a2.latitude / 180) + cos(pi() * a1.latitude / 180) * cos(pi() * a2.latitude / 180) * cos(pi() * (a1.longitude - a2.longitude) / 180)) * 180 / pi() * 60 * 1.1515 * 1.609344 distance_km
FROM dst_project.airports a1
JOIN dst_project.airports a2 ON a2.airport_code='AAQ'
WHERE a1.airport_code in ('EGO',
                          'NOZ',
                          'SVO')
ORDER BY distance_km


5. Затраты на рейс в зависимости от типа самолета:

WITH airport_distance AS
  (SELECT a1.airport_code,
          acos(sin(pi() * a1.latitude / 180) * sin(pi() * a2.latitude / 180) + cos(pi() * a1.latitude / 180) * cos(pi() * a2.latitude / 180) * cos(pi() * (a1.longitude - a2.longitude) / 180)) * 180 / pi() * 60 * 1.1515 * 1.609344 distance_km
   FROM dst_project.airports a1
   JOIN dst_project.airports a2 ON a2.airport_code='AAQ'
   WHERE a1.airport_code in ('EGO',
                             'NOZ',
                             'SVO')),
     fuel_consumption AS
  (SELECT '733' aircraft_code,
                3.46 fuel_consumption_100km
   UNION ALL SELECT 'SU9' aircraft_code,
                          3.59 fuel_consumption_100km),
     seat_count AS
  (SELECT aircraft_code,
          count(seat_no) seat_count
   FROM dst_project.seats
   WHERE aircraft_code in ('733',
                           'SU9')
   GROUP BY aircraft_code)
SELECT a.model,
       f.arrival_airport,
       min((1.55 / 4.54609) * s.seat_count * d.distance_km / 100) fuel_cost_usd,
       min((1.55 / 4.54609) * (s.seat_count * d.distance_km / 100) / 0.237) total_cost_usd
FROM dst_project.flights f
JOIN airport_distance d ON f.arrival_airport=d.airport_code
JOIN fuel_consumption c ON c.aircraft_code=f.aircraft_code
JOIN seat_count s ON s.aircraft_code=f.aircraft_code
JOIN dst_project.aircrafts a ON a.aircraft_code=f.aircraft_code
WHERE departure_airport = 'AAQ'
  AND (date_trunc('month', scheduled_departure) in ('2017-01-01',
                                                    '2017-02-01',
                                                    '2017-12-01'))
  AND status not in ('Cancelled')
GROUP BY a.model,
         f.arrival_airport















Расчитаем total cost для каждого рейса:

WITH airport_distance AS
  (SELECT a1.airport_code,
          acos(sin(pi() * a1.latitude / 180) * sin(pi() * a2.latitude / 180) + cos(pi() * a1.latitude / 180) * cos(pi() * a2.latitude / 180) * cos(pi() * (a1.longitude - a2.longitude) / 180)) * 180 / pi() * 60 * 1.1515 * 1.609344 distance_km
   FROM dst_project.airports a1
   JOIN dst_project.airports a2 ON a2.airport_code='AAQ'
   WHERE a1.airport_code in ('EGO',
                             'NOZ',
                             'SVO')),
     fuel_consumption AS
  (SELECT '733' aircraft_code,
                3.46 fuel_consumption_100km
   UNION ALL SELECT 'SU9' aircraft_code,
                          3.59 fuel_consumption_100km),
     seat_count AS
  (SELECT aircraft_code,
          count(seat_no) seat_count
   FROM dst_project.seats
   WHERE aircraft_code in ('733',
                           'SU9')
   GROUP BY aircraft_code)
SELECT f.flight_id,
       f.flight_no,
       f.scheduled_departure,
       a.model,
       f.arrival_airport,
       min((1.55 / 4.54609) * s.seat_count * d.distance_km / 100) fuel_cost_usd,
       min((1.55 / 4.54609) * (s.seat_count * d.distance_km / 100) / 0.237) total_cost_usd
FROM dst_project.flights f
JOIN airport_distance d ON f.arrival_airport=d.airport_code
JOIN fuel_consumption c ON c.aircraft_code=f.aircraft_code
JOIN seat_count s ON s.aircraft_code=f.aircraft_code
JOIN dst_project.aircrafts a ON a.aircraft_code=f.aircraft_code
WHERE departure_airport = 'AAQ'
  AND (date_trunc('month', scheduled_departure) in ('2017-01-01',
                                                    '2017-02-01',
                                                    '2017-12-01'))
  AND status not in ('Cancelled')
